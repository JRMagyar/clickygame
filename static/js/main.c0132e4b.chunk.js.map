{"version":3,"sources":["components/CharacterImage/index.js","components/CharacterWrapper/index.js","components/Title/index.js","components/SiteWrapper/index.js","App.js","index.js"],"names":["CharacterImage","props","react_default","a","createElement","onClick","clickImage","id","className","alt","src","image","CharacterWrapper","children","Title","score","SiteWrapper","App","state","allCharacters","characters","clickedCharacters","_this","length","indexOf","alert","setState","shuffleImages","push","newArray","currentOrder","randomIndex","Math","floor","random","splice","_this2","this","components_SiteWrapper","components_Title","components_CharacterWrapper","map","character","components_CharacterImage","key","name","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"g8BAWeA,MARf,SAAwBC,GACpB,OACIC,EAAAC,EAAAC,cAAA,QAAMC,QAAS,kBAAMJ,EAAMK,WAAWL,EAAMM,KAAKC,UAAU,oBACvDN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMQ,IAAKC,IAAKT,EAAMU,MAAOJ,GAAIN,EAAMM,oBCC9CK,MAJf,SAA0BX,GACxB,OAAOC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMY,iBCG1BC,MAJf,SAAeb,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAAd,yBAA6CP,EAAMc,cCG7CC,MAJf,SAAqBf,GACnB,OAAOC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMY,WCoE1BI,6MAhEXC,MAAQ,CACJC,cAAeC,EACfC,kBAAmB,MAIvBf,WAAa,SAAAC,GACT,GAA2C,KAAxCe,EAAKJ,MAAMG,kBAAkBE,QACqB,IAA9CD,EAAKJ,MAAMG,kBAAkBG,QAAQjB,IACpCkB,MAAM,YACNH,EAAKI,SAAS,CAACL,kBAAoB,KACnCC,EAAKK,kBAGLL,EAAKI,SAAS,CAACL,kBAAoB,KACnCC,EAAKK,sBAIT,IAAiD,IAA9CL,EAAKJ,MAAMG,kBAAkBG,QAAQjB,GAAW,CAC/C,IAAMc,EAAoBC,EAAKJ,MAAMG,kBACrCA,EAAkBO,KAAKrB,GACvBe,EAAKI,SAAS,CAACL,kBAAoBA,IACnCC,EAAKK,qBAGLL,EAAKI,SAAS,CAACL,kBAAoB,KACnCC,EAAKK,mBAMjBA,cAAgB,WAGZ,IAFA,IAAME,EAAW,GACXC,EAAeR,EAAKJ,MAAMC,cAC1BW,EAAaP,OAAS,GAAE,CAC1B,IAAIQ,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAaP,QAC1DM,EAASD,KAAKE,EAAaC,IAC3BD,EAAaK,OAAO,CAACJ,GAAa,GAEtCT,EAAKI,SAAS,CAACP,cAAeU,6EAG1B,IAAAO,EAAAC,KACJ,OACInC,EAAAC,EAAAC,cAACkC,EAAD,KACIpC,EAAAC,EAAAC,cAACmC,EAAD,CAAOxB,MAAOsB,KAAKnB,MAAMG,kBAAkBE,SAC3CrB,EAAAC,EAAAC,cAACoC,EAAD,KACCH,KAAKnB,MAAMC,cAAcsB,IAAI,SAAAC,GAAS,OACnCxC,EAAAC,EAAAC,cAACuC,EAAD,CACArC,WAAY8B,EAAK9B,WACjBC,GAAImC,EAAUnC,GACdqC,IAAKF,EAAUnC,GACfI,MAAO+B,EAAU/B,MACjBF,IAAKiC,EAAUG,kBAxDjBC,aCFlBC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c0132e4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction CharacterImage(props){\r\n    return(\r\n        <span onClick={() => props.clickImage(props.id)} className=\"character-holder\">\r\n            <img alt={props.alt} src={props.image} id={props.id}/>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default CharacterImage","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction CharacterWrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default CharacterWrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">Clicky Game || Score: {props.score}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SiteWrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default SiteWrapper;\r\n","import React, {Component} from \"react\";\r\nimport CharacterImage from \"./components/CharacterImage\";\r\nimport characters from \"./characters.json\";\r\nimport CharacterWrapper from \"./components/CharacterWrapper\";\r\nimport Title from \"./components/Title\";\r\nimport SiteWrapper from \"./components/SiteWrapper\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        allCharacters: characters,\r\n        clickedCharacters: []\r\n\r\n    };\r\n\r\n    clickImage = id => {\r\n        if(this.state.clickedCharacters.length === 11){\r\n            if(this.state.clickedCharacters.indexOf(id) === -1){\r\n                alert(\"You won!\")\r\n                this.setState({clickedCharacters : []})\r\n                this.shuffleImages();\r\n            }\r\n            else{\r\n                this.setState({clickedCharacters : []})\r\n                this.shuffleImages();\r\n            }\r\n        }\r\n        else{\r\n            if(this.state.clickedCharacters.indexOf(id) === -1){\r\n                const clickedCharacters = this.state.clickedCharacters;\r\n                clickedCharacters.push(id);\r\n                this.setState({clickedCharacters : clickedCharacters})\r\n                this.shuffleImages();\r\n            }\r\n            else{\r\n                this.setState({clickedCharacters : []})\r\n                this.shuffleImages();\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    shuffleImages = () => {\r\n        const newArray = [];\r\n        const currentOrder = this.state.allCharacters;\r\n        while(currentOrder.length > 0){\r\n            let randomIndex = Math.floor(Math.random() * currentOrder.length);\r\n            newArray.push(currentOrder[randomIndex]);\r\n            currentOrder.splice([randomIndex],1);\r\n        }\r\n        this.setState({allCharacters: newArray});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <SiteWrapper>\r\n                <Title score={this.state.clickedCharacters.length}></Title>\r\n                <CharacterWrapper>\r\n                {this.state.allCharacters.map(character => (\r\n                    <CharacterImage\r\n                    clickImage={this.clickImage}\r\n                    id={character.id}\r\n                    key={character.id}\r\n                    image={character.image}\r\n                    alt={character.name}\r\n                    />\r\n                ))}\r\n                </CharacterWrapper>\r\n            </SiteWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}